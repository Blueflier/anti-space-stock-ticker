export declare class KV {
    private baseUrl;
    private token;
    private integrationId?;
    /**
     * Create a new AntiSpace KV client
     * @param token Optional platform token (defaults to ANTISPACE_PLATFORM_TOKEN env var)
     * @param integrationId Optional integration ID (defaults to appId from anti.json)
     */
    constructor(token?: string, integrationId?: string);
    /**
     * Get a value from the KV store
     * @param key The key to get
     * @returns The value associated with the key
     */
    get<T = string>(key: string): Promise<T | null>;
    /**
     * Create a new key-value pair
     * @param key The key to create
     * @param value The value to store
     * @returns The created key-value pair
     */
    set<T>(key: string, value: T): Promise<{
        key: string;
        value: T;
    }>;
    /**
     * Update an existing key-value pair
     * @param key The key to update
     * @param value The new value
     * @returns The updated key-value pair
     */
    update<T>(key: string, value: T): Promise<{
        key: string;
        value: T;
    }>;
    /**
     * Delete a key-value pair
     * @param key The key to delete
     * @returns Whether the deletion was successful
     */
    delete(key: string): Promise<boolean>;
}
//# sourceMappingURL=kv.d.ts.map